Base Calling from Illumina GA IIx Sequencer Using Casava1.8.2:
---------------------------------------------------------------

Casava is installed on local Linux server at /usr/local/share/bioinfo/CASAVA_v1.8.2/
Programs are located in /usr/local/share/bioinfo/CASAVA_v1.8.2/Build/bin/

BcltoFastq Conversion :
-----------------------

New Batch perl script "configureBcltofastq.pl" is included in Casava 1.8, which directly converts bcl (image) files to Fastq format.

Steps to Run BcltoFastq :

1) Navigate to the Basecall Directory.

2) Run below command , using parameters accordingly.

   /usr/local/share/bionifo/CASAVA_v1.8.2/Build/bin/configureBcltoFastq.pl
	
     --input-dir		: Path to Basecall directory
     --intensities-dir	 	: Path to Intensities directory (defaults to parent of basecall directory)
     --positions-dir		: Path to directory containing positions files (default depends on RTA version)
     --output-dir        	: Path to Output folder
     --sample-sheet        	: Path to Samplesheet.csv (defaults to BasecallDir/SampleSheet.csv)
     --tiles regex[[,regex]...] : Comma-separated list of regular expressions to select only a subset of the tiles available in the flow-cell.
  				   - to select all the tiles ending with "5" in all lanes: --tiles [0-9][0-9][0-9]5
 				   - to select tile 2 in lane 1 and all the tiles in the other lanes: --tiles s_1_0002,s_[2-8]

      Example CMD: /usr/local/share/bioinfo/Build/bin/configureBcltoFastq.pl --input-dir ./path/to/basecalldir/ --output-dir ./path/to/output 

3) Run Make file.
   
    This Wrapper script creates the output directory, and writes some Make files into it.
    After running this wrapper script, navigate to the output folder and type, 

    nohup make -j n &         : n is the no of processors.


BcltoQseq Conversion :
----------------------
Before Casava 1.8, Bcl files were first converted to Qseq usign Off-Line Basecaller (OLB), later they are converted to Fastq format using Casava.

This Wrapper script is used to convert Bcl files to intermediate Qseq format in OLB (Off-Line-Basecaller)

Steps to Run BcltoQSeq conversion:

1) Navigate to the Basecall Directory.
 
2) Run below setupBcltoQseq.py, using parameters accordingly.

  /usr/local/share/bioinfo/OLB-1.9.0/bin/setupBcltoQseq.py 
 
   -b BASECALL Directory 	: Full Path to Basecall directory generated by Instrument.
   --in-place			: Allow in-place conversion.
   -i INTENSITIES Directory	: Full Path to Intensities directory,
 				  (if different from parent of Basecall directory).
   -p POSITIONS Directory	: Full Path to Positions Directory,
				  (if Different from Intensities Directory).
   -o OUTPUT Directory		: Full Path of Output Directory.(if not --in-place conversion).
   --overwrite			: Overwrite the contents of Output directory, if exists.

   Example Run : /usr/local/share/bioinfo/setupBcltoQseq.py -b /pathtoBaseCallDirectory/ --in-place

3) Run Make file.

   Go to Output folder (or basecall folder, if --in-place) and type 
   nohup make -j n &   ,"n" is the no of processors used


QseqtoFastq Conversion:
-----------------------

After converting, Bcl to Qseq, they can be converted into Fastq format using Casava_v1.8.2

Steps for running QseqtoFastq:

1) Navigate to Basecall/Output directory, in whichi *_qseq.txt files are present.

2) Run below configureQseqtoFastq.pl, usnig parameters accordingly

    /usr/local/share/bioinfo/CASAVA_v1.8.2/Build/bin/configureQseqtoFastq.pl

      --input-dir           : Path to Qseq directory (No Default) (Usually Basecall directory).
      --output-dir 	    : Path to Output dir (Def: <input-dir>/BcltoFastq/Unaligned).
      --fastq-cluster-count : Maximum no of fastq records in each fastq file (Def:4000000).
      --config-file 	    : Specify Bustard config file (Def: <input-dir>/config.xml).
      --summary-file 	    : Specify bustard summary file (Def: <input-dir>/BustardSummary.xml).

     Example CMD: /usr/local/share/bioinfo/CASAVA_v1.8.2/Build/bin/configureQseqtoFastq.pl --input-dir DIR 

3) Run Make file.
  
   nohup make -j n &  , n is no of processors can be used.
